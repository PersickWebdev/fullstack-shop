AUTH DATA           (+)
USER DATA           (+)
CATEGORY DATA       (+)
PRODUCT DATA        (in progress)
ORDER DATA          (pending)

AUTH DATA:
    01. SIGN_IN
        DESCRIPTION
            METHOD:                 POST
            ENDPOINT:               /auth/sign-in
            RESPONSE:
                                    code:       201
                                    status:     'success'
                                    message:    ''
                                    details:    ''
                                    data:
                                                userToken:      string
                                                userId:         string
                                                userName:       string
                                                userEmail:      string
                                                userPhone:      string
                                                userProducts:   array

                                    code:       400
                                    status:     'error'
                                    message:    'Incorrect sign-in data'
                                    details:    'Check your Email and Password'
                                    data:       null
            DATA TO SEND:
                                    email:      string
                                    password:   string
            DATA VALIDATION:
                email:
                                    cannot be empty
                password:
                                    cannot be empty
            VALID DATA EXAMPLE:
                email               'testEmail@gmail.com'
                password            'Qwerty123456!'

    02. SIGN_UP
        DESCRIPTION
            METHOD:                 POST
            ENDPOINT:               /auth/sign-up
            RESPONSE:
                                    code:       201
                                    status:     'success'
                                    message:    'User ${userName} has been successfully created'
                                    details:    ''
                                    data:
                                                userId:         string
                                                userName:       string
                                                userEmail:      string
                                                userPhone:      string
                                                userProducts:   array

                                    code:       400
                                    status:     'error'
                                    message:    'User with ${userEmail} already exists'
                                    details:    'Only one email address is allowed per one account'
                                    data:       null
            DATA TO SEND:
                                    name:               string
                                    email:              string
                                    phone:              string
                                    password:           string
                                    confirmPassword:    string
                                    products:           array
            DATA VALIDATION:
                name:
                                    cannot be empty
                                    no numbers
                                    at least 2 characters
                                    no more than 255 characters
                email:
                                    cannot be empty
                                    email correct format
                phone:
                                    cannot be empty
                                    universal phone number format
                password:
                                    cannot be empty
                                    at least 8 characters
                                    no more than 40 characters
                                    at least one uppercase character
                                    at least one lowercase character
                                    at least one punctuation character
                confirmPassword:
                                    must match with password value
            VALID DATA EXAMPLE:
                name:               'Vader'
                email:              'deathStar@galaxy.un'
                phone:              '+380631112233'
                password:           'Qwerty123456!'
                confirmPassword:    'Qwerty123456!'

USER DATA:
    01. GET ALL
        DESCRIPTION:
            METHOD:                 GET
            ENDPOINT:               /user/get
            RESPONSE:
                                    code:           200
                                    status:         'success'
                                    message:        ''
                                    details:        ''
                                    data:
                                                    array of users

    02. GET ONE
        DESCRIPTION:
            METHOD:                 GET
            ENDPOINT:               /user/get/userId
            RESPONSE:
                                    code:           200
                                    status:         'success'
                                    message:        ''
                                    details:        ''
                                    data:
                                                    user

                                    code:           400
                                    status:         'error'
                                    message:        'No such user found'
                                    details:        ''
                                    data:           null
            DATA TO SEND:
                                    userId:         string

    03. EDIT
        DESCRIPTION:
            METHOD:                 PUT
            ENDPOINT:               /user/update/userId
            RESPONSE:
                                    code:           201
                                    status:         'success'
                                    message:        'User ${userName} has been successfully updated'
                                    details:        ''
                                    data:
                                                    userId:         string
                                                    userName:       string
                                                    userPhone:      string
                                                    userEmail:      string
                                                    userProducts:   array

                                    code:           400
                                    status:         'error'
                                    message:        'No such user found'
                                    details:        ''
                                    data:           null
            DATA TO SEND:
                                    userToken:      string
                                    userId:         string
                                    userName:       string
                                    userPhone:      string
                                    userEmail:      string
                                    userPassword:   string
                                    userProducts:   array
            DATA VALIDATION:
                name:
                                    cannot be empty
                                    no numbers
                                    at least 2 characters
                                    no more than 255 characters
                email:
                                    cannot be empty
                                    email correct format
                phone:
                                    cannot be empty
                                    universal phone number format
            VALID DATA EXAMPLE:
                name:               'Vader'
                email:              'deathStar@galaxy.un'
                phone:              '+380631112233'

    04. REMOVE
        DESCRIPTION
            METHOD:                 DELETE
            ENDPOINT:               /user/remove/userId
            RESPONSE:
                                    status:         'success'
                                    message:        'User ${userName} has been successfully removed'
                                    details:        ''

                                    status:         'error'
                                    message:        'No such user found'
                                    details:        ''
            DATA EXAMPLE:
                                    userToken:      string
                                    userId:         string

CATEGORY DATA:
    01. GET ALL
        DESCRIPTION:
            METHOD:                 GET
            ENDPOINT:               /category/get
            RESPONSE:
                                    code:           200
                                    status:         'success'
                                    message:        ''
                                    details:        ''

    02. GET ONE
        DESCRIPTION:
            METHOD:                 GET
            ENDPOINT:               /category/get/categoryId
            RESPONSE:
                                    code:           200
                                    status:         'success'
                                    message:        ''
                                    details:        ''
            DATA EXAMPLE:
                                    categoryId:     2

    03. CREATE
        DESCRIPTION
            METHOD:                 POST
            ENDPOINT:               /category/create
            RESPONSE:
                                    status:         'success'
                                    message:        'Category ${categoryName} has been successfully created'
                                    details:        ''

                                    status:         'error'
                                    message:        'Category ${categoryName} already exists'
                                    details:        ''
            DATA EXAMPLE:
                                    name:           string
            DATA VALIDATION:
                name:
                                    cannot be empty
            VALID DATA EXAMPLE:
                name:               'Burgers'
    04. EDIT
        DESCRIPTION
            METHOD:                 PUT
            ENDPOINT:               /category/edit/categoryId
            RESPONSE:
                                    status:         'success'
                                    message:        'Category ${categoryName} has been successfully edited'
                                    details:        ''
            DATA EXAMPLE:
                                    name:           string
            DATA VALIDATION:
                name:
                                    cannot be empty
            VALID DATA EXAMPLE:
                name:               'Water'
    05. REMOVE
        DESCRIPTION
            METHOD:                 DELETE
            ENDPOINT:               /category/remove/categoryId
            RESPONSE:
                                    status:         'success'
                                    message:        'Category ${categoryName} has been successfully removed'
                                    details:        ''
            DATA EXAMPLE:
                                    categoryId:     string

PRODUCT DATA
    01. GET ALL
        DESCRIPTION
            METHOD:                 GET
            ENDPOINT:               /product/get-all
            RESPONSE:

    02. GET ONE
    03. ADD
    04. EDIT
    05. REMOVE